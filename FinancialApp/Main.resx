<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>